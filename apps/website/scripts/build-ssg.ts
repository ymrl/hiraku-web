import { rmSync, writeFileSync } from "node:fs";
import { mkdir } from "node:fs/promises";
import { dirname, join } from "node:path";
import { type ReactElement, createElement } from "react";
import { renderToStaticMarkup } from "react-dom/server";
import { EnglishPage } from "../src/pages/EnglishPage.js";
import { JapanesePage } from "../src/pages/JapanesePage.js";

const distDir = join(process.cwd(), "dist");

interface PageConfig {
  path: string;
  component: ReactElement;
  lang: "ja" | "en";
  title: string;
  description: string;
  url: string;
}

const pages: PageConfig[] = [
  {
    path: "index.html",
    component: createElement(JapanesePage),
    lang: "ja",
    title: "ひらくウェブ - 読みやすいウェブへ",
    description:
      "ウェブページをもっと快適に。目次を作ったり、文字の大きさや間隔を調節したり。読みやすさに合わせてウェブをひらく拡張機能です。",
    url: "https://ymrl.github.io/hiraku-web/",
  },
  {
    path: "en.html",
    component: createElement(EnglishPage),
    lang: "en",
    title: "Hiraku Web - Make the Web More Readable",
    description:
      "A browser extension that makes the web more readable. Create table of contents, adjust text styling, and read aloud.",
    url: "https://ymrl.github.io/hiraku-web/en.html",
  },
];

function generateHTML(config: PageConfig): string {
  const html = renderToStaticMarkup(config.component);
  const ogImageUrl = "https://ymrl.github.io/hiraku-web/card.png";

  return `<!doctype html>
<html lang="${config.lang}">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/hiraku-web/icon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="${config.description}" />
    <title>${config.title}</title>

    <!-- Open Graph Protocol -->
    <meta property="og:title" content="${config.title}" />
    <meta property="og:description" content="${config.description}" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="${config.url}" />
    <meta property="og:image" content="${ogImageUrl}" />
    <meta property="og:locale" content="${config.lang === "ja" ? "ja_JP" : "en_US"}" />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="${config.title}" />
    <meta name="twitter:description" content="${config.description}" />
    <meta name="twitter:image" content="${ogImageUrl}" />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Kosugi+Maru&family=Readex+Pro:wght@300;400;600;700&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/hiraku-web/assets/css.css" />
  </head>
  <body>
    ${html}
  </body>
</html>`;
}

async function build() {
  await mkdir(distDir, { recursive: true });

  // Remove unnecessary JS file generated by Vite
  const cssJsPath = join(distDir, "assets", "css.js");
  try {
    rmSync(cssJsPath);
  } catch {
    // Ignore if file doesn't exist
  }

  for (const page of pages) {
    const html = generateHTML(page);
    const filePath = join(distDir, page.path);
    await mkdir(dirname(filePath), { recursive: true });
    writeFileSync(filePath, html, "utf-8");
    console.log(`✓ Generated ${page.path}`);
  }
}

build().catch(console.error);
